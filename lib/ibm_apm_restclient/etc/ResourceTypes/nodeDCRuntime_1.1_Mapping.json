{
  "doctype": "mapping",
  "productCode": "KNJ",
  "extraData": {
    "entity-properties": [],
    "resource-properties": {
      "relationships": [],
      "members": [],
      "overrides": [{
        "set": ["$odiAttribute *eq resourceID",
        "$odiLabel *eq Resource ID",
        "$odiDescription *eq The resource ID.",
        "$fieldRequired *eq true",
        "$fieldOutput *eq property",
        "$odiDataType *eq string"],
        "when": "$odiObject *eq null *and $odiAttribute *eq resourceID"
      },
      {
        "set": ["$odiAttribute *eq applicationResourceID",
        "$odiLabel *eq Application Resource ID",
        "$odiDescription *eq The Application resource ID.",
        "$fieldOutput *eq property",
        "$odiDataType *eq string"],
        "when": "$odiObject *eq null *and $odiAttribute *eq applicationResourceID"
      },
      {
        "set": ["$odiAttribute *eq npmResourceID",
        "$odiLabel *eq NPM Resource ID",
        "$odiDescription *eq The npm resource ID.",
        "$fieldOutput *eq property",
        "$odiDataType *eq string"],
        "when": "$odiObject *eq null *and $odiAttribute *eq npmResourceID"
      },
      {
        "set": ["$odiAttribute *eq applicationInstanceResourceID",
        "$odiLabel *eq Application Instance Resource ID",
        "$odiDescription *eq The a pplication instance resource ID.",
        "$fieldOutput *eq property",
        "$odiDataType *eq string"],
        "when": "$odiObject *eq null *and $odiAttribute *eq applicationInstanceResourceID"
      },
      {
        "set": ["$odiAttribute *eq _componentType",
        "$odiLabel *eq Component Type",
        "$odiDescription *eq The component type.",
        "$fieldRequired *eq true",
        "$fieldOutput *eq property",
        "$odiDataType *eq string"],
        "when": "$odiObject *eq null *and $odiAttribute *eq _componentType"
      },
      {
        "set": ["$odiAttribute *eq gcDuration",
        "$odiLabel *eq Garbage Collection Duration",
        "$odiDescription *eq The duration of the GC cycle, in milliseconds.",
        "$fieldOutput *eq metric",
        "$odiDataType *eq double",
        "$useUnits *eq milliseconds"],
        "when": "$odiObject *eq null *and $odiAttribute *eq gcDuration"
      },
      {
        "set": ["$odiAttribute *eq markSweepGcCount",
        "$odiLabel *eq Mark Sweep Count",
        "$odiDescription *eq The count of Mark Sweep Compact GC, in one minute",
        "$fieldOutput *eq metric",
        "$odiDataType *eq int",
        "$useUnits *eq count"],
        "when": "$odiObject *eq null *and $odiAttribute *eq markSweepGcCount"
      },
      {
        "set": ["$odiAttribute *eq scavengeGcCount",
        "$odiLabel *eq Scavenge GC Count",
        "$odiDescription *eq The count of Scavenge GC in one minute",
        "$fieldOutput *eq metric",
        "$odiDataType *eq int",
        "$useUnits *eq count"],
        "when": "$odiObject *eq null *and $odiAttribute *eq scavengeGcCount"
      },
      {
        "set": ["$odiAttribute *eq processWeakCallbacksGcCount",
        "$odiLabel *eq Process Weak Callbacks Count",
        "$odiDescription *eq The count of process weak callbacks GC, in one minute",
        "$fieldOutput *eq metric",
        "$odiDataType *eq int",
        "$useUnits *eq count"],
        "when": "$odiObject *eq null *and $odiAttribute *eq processWeakCallbacksGcCount"
      },
      {
        "set": ["$odiAttribute *eq incrementalMarkingGcCount",
        "$odiLabel *eq Incremental Marking Count",
        "$odiDescription *eq The count of incremental marking GC, in one minute",
        "$fieldOutput *eq metric",
        "$odiDataType *eq int",
        "$useUnits *eq count"],
        "when": "$odiObject *eq null *and $odiAttribute *eq incrementalMarkingGcCount"
      },
      {
        "set": ["$odiAttribute *eq heapSize",
        "$odiLabel *eq Heap Size",
        "$odiDescription *eq The heap size of the Node application in the last interval, in megabytes",
        "$fieldOutput *eq metric",
        "$odiDataType *eq int",
        "$useUnits *eq megabytes"],
        "when": "$odiObject *eq null *and $odiAttribute *eq heapSize"
      },
      {
        "set": ["$odiAttribute *eq usedHeap",
        "$odiLabel *eq usedHeap",
        "$odiDescription *eq The amount of memory that is used in the Node application, in megabytes",
        "$fieldOutput *eq metric",
        "$odiDataType *eq int",
        "$useUnits *eq megabytes"],
        "when": "$odiObject *eq null *and $odiAttribute *eq usedHeap"
      },
      {
        "set": ["$odiAttribute *eq averageEventLoopLatency",
        "$odiLabel *eq Average Latency",
        "$odiDescription *eq The average sampled latency, in milliseconds. The latency samples are taken in the last five seconds in one minute.",
        "$fieldOutput *eq metric",
        "$odiDataType *eq double",
        "$useUnits *eq milliseconds",
        "$odiEnums *eq true"],
        "when": "$odiObject *eq null *and $odiAttribute *eq averageEventLoopLatency"
      },
      {
        "set": ["$odiAttribute *eq maximumEventLoopLatency",
        "$odiLabel *eq Longest Latency",
        "$odiDescription *eq The longest sampled latency, in milliseconds. The latency samples are taken in the last five seconds in one minute",
        "$fieldOutput *eq metric",
        "$odiDataType *eq double",
        "$useUnits *eq milliseconds"],
        "when": "$odiObject *eq null *and $odiAttribute *eq Latency_Max"
      },
      {
        "set": ["$odiAttribute *eq minimumEventLoopLatency",
        "$odiLabel *eq Shortest Latency",
        "$odiDescription *eq The shortest sampled latency, in milliseconds. The latency samples are taken in the last five seconds in one minute.",
        "$fieldOutput *eq metric",
        "$odiDataType *eq double",
        "$useUnits *eq milliseconds",
        "$odiEnums *eq true"],
        "when": "$odiObject *eq null *and $odiAttribute *eq minimumEventLoopLatency"
      },
      {
        "set": ["$odiAttribute *eq averageEventLoopTickTime",
        "$odiLabel *eq Average Event Loop Tick Time",
        "$odiDescription *eq The average tick time of the event loop in milliseconds over the last one minute",
        "$fieldOutput *eq metric",
        "$odiDataType *eq double",
        "$useUnits *eq milliseconds"],
        "when": "$odiObject *eq null *and $odiAttribute *eq Loop_Average"
      },
      {
        "set": ["$odiAttribute *eq eventLoopTickCount",
        "$odiLabel *eq Event Loop Tick Count",
        "$odiDescription *eq The total number of event loop ticks in last minute",
        "$fieldOutput *eq metric",
        "$odiDataType *eq int",
        "$useUnits *eq ticks"],
        "when": "$odiObject *eq null *and $odiAttribute *eq Loop_Count"
      },
      {
        "set": ["$odiAttribute *eq maximumEventLoopTickTime",
        "$odiLabel *eq Event Loop slowest Tick Time",
        "$odiDescription *eq The longest or slowest tick time (milliseconds) of the event loop in last one minute",
        "$fieldOutput *eq metric",
        "$odiDataType *eq double",
        "$useUnits *eq milliseconds"],
        "when": "$odiObject *eq null *and $odiAttribute *eq Loop_Maximum"
      },
      {
        "set": ["$odiAttribute *eq averageEventLoopLatency",
        "$odiLabel *eq Average Latency",
        "$odiDescription *eq The average sampled latency, in milliseconds. The latency samples are taken in the last five seconds in one minute.",
        "$fieldOutput *eq metric",
        "$odiDataType *eq double",
        "$useUnits *eq milliseconds",
        "$odiEnums *eq true"],
        "when": "$odiObject *eq null *and $odiAttribute *eq averageEventLoopLatency"
      },
      {
        "set": ["$odiAttribute *eq minimumEventLoopLatency",
        "$odiLabel *eq Shortest Latency",
        "$odiDescription *eq The shortest sampled latency, in milliseconds. The latency samples are taken in the last five seconds in one minute.",
        "$fieldOutput *eq metric",
        "$odiDataType *eq double",
        "$useUnits *eq milliseconds",
        "$odiEnums *eq true"],
        "when": "$odiObject *eq null *and $odiAttribute *eq minimumEventLoopLatency"
      }],
      "properties": [{
        "datatype": "string",
        "values": ["Resource"],
        "displaylabel": "Class",
        "name": "Class",
        "description": ""
      }]
    }
  },
  "displaylabel": "Node DC Runtime",
  "description": "Node DC Runtime.",
  "entityTypes": ["noderuntime"],
  "source": "Collector",
  "type": "nodeDCRuntime",
  "version": "1.1",
  "uniqueId": "metadata\/\/1.1\/resourcemaps\/resourcemap\/nodeDCRuntime",
  "tags": ["mapping"]
}